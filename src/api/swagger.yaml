swagger: '2.0'
info:
  title: Kort API
  version: "0.1"
consumes:
  - application/json
produces:
  - application/json
basePath: /v0.1

paths:

  /users/{user_id}:
    get:
      tags: [User]
      operationId: api.users.get_user
      summary: Get a single user
      parameters:
        - $ref: '#/parameters/user_id'
          required: true
        - name: Authorization
          in: header
          description: the user secret given after succesful OAuth login
          required: true
          type: string
      responses:
        200:
          description: Return User
          schema:
            $ref: '#/definitions/User'
        401:
          description: Unauthorized
        404:
          description: User does not exist

  /missions:
    get:
      tags: [Mission]
      operationId: api.missions.get_missions
      summary: returns all missions within the parameters given
      parameters:
        - name: user_id
          in: query
          description: unique user id
          type: string
          required: false
        - name: lat
          in: query
          type: number
          required: true
        - name: lon
          in: query
          type: number
          required: true
        - name: radius
          in: query
          type: integer
          required: true
        - name: limit
          in: query
          type: integer
          minimum: 0
          default: 100
        - name: lang
          in: query
          type: string
          default: 'en'
      responses:
        200:
          description: Returns missions
          schema:
            type: array
            items:
              $ref: '#/definitions/Mission'
  /missions/{schema_id}/{error_id}/solution:
    post:
      tags: [Mission]
      operationId: api.missions.put_mission_solution
      summary: mission description
      parameters:
        - $ref: '#/parameters/schema_id'
        - $ref: '#/parameters/error_id'
        - name: lang
          in: query
          type: string
          default: 'en'
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/missionSolution'
      responses:
        200:
          description: submit a mission solution
      responses:
        200:
          description: Returns newly aquired achievements
          schema:
            type: array
            items:
              $ref: '#/definitions/Achievement'
  /missions/osm/{osm_type}/{osm_id}:
    get:
      tags: [Mission]
      operationId: api.missions.get_osm_geom
      summary: returns the geometry of the osm feature
      parameters:
        - $ref: '#/parameters/osm_type'
        - $ref: '#/parameters/osm_id'
      responses:
        200:
          description: returns list of coordinates


  /highscore:
    get:
      tags: [Highscore]
      operationId: api.highscores.get_highscore
      summary: returns the current highscore
      parameters:
        - name: type
          in: query
          type: string
          enum:
            - day
            - week
            - month
            - all
          default: all
        - name: limit
          in: query
          type: integer
          minimum: 1
          default: 10
      responses:
        200:
          description: Returns highscore
          schema:
            type: array
            items:
              $ref: '#/definitions/Highscore'

  /achievements:
    get:
      tags: [Achievements]
      operationId: api.achievements.get_achievements
      summary: returns the achievements
      parameters:
        - name: user_id
          description: unique user id
          type: string
          in: query
          default: -1
        - name: lang
          in: query
          type: string
          default: 'en'
      responses:
        200:
          description: Returns newly aquired achievements if any
          schema:
            type: array
            items:
              $ref: '#/definitions/Achievement'


parameters:
  user_id:
    name: user_id
    description: unique user id
    in: path
    type: string
    pattern: "^[0-9]+$"
  schema_id:
    name: schema_id
    description: schema id
    in: path
    type: string
    required: true
    pattern: "^[0-9]+$"
  error_id:
    name: error_id
    description: error id
    in: path
    type: integer
    required: true
  osm_type:
    name: osm_type
    description: the osm type (node, way, relation)
    in: path
    type: string
    enum:
      - node
      - way
      - relation
  osm_id:
    name: osm_id
    description: the osm id
    in: path
    type: integer


definitions:
  User:
    type: object
    required:
      - name
      - username
      - mission_count
      - mission_count_today
      - koin_count
      - oauth_provider
      - oauth_user_id
      - pic_url
      - secret
      - token
      - logged_in
      - last_login
    properties:
      id:
        type: integer
        description: Unique identifier
        example: 12
        readOnly: true
      name:
        type: string
        description: User's full name
        example: "user"
        minLength: 1
        maxLength: 100
      username:
        type: string
        description: User's full name
        example: "user"
        minLength: 1
        maxLength: 100
      mission_count:
        type: integer
        description: how many mission the user has finished
        example: 2
      mission_count_today:
        type: integer
        description: how many mission the user has finished today
        example: 2
      koin_count:
        type: integer
        description: how many koins the user has
      oauth_provider:
        type: string
        description: oauth provider
        example: "google"
      oauth_user_id:
        type: string
        description: oauth user id
        example: "none"
      pic_url:
        type: string
        description: url to avatar picture
        example: "www.gravatar.com/avatar/secret?s=200&d=mm&r=r"
      secret:
        type: string
        description: url to avatar picture
        example: "asdojasdkjas"
      token:
        type: string
        description: token from oauth
        example: "kuqwelkjh"
      logged_in:
        type: boolean
        description: whether the user is logged in
        example: true
      last_login:
        type: string
        format: date-time
        description: Creation time
        example: "2015-07-07T15:49:51.230+02:00"
        readOnly: true

  Mission:
    type: object
    properties:
      id:
        type: string
        description: id
        example: 12
        readOnly: true
      osmId:
        type: number
        description: "The unique OSM id"
      osmType:
        type: string
      type:
        type: string
        description: mission type
        example: "mission_building_floors"
      title:
        type: string
        description: mission title for display
        example: "Missing Building Floors"
      question:
        type: string
        description: question
        example: "How many floors has this building?"
      geomType:
        type: string
        description: geometry type
        example: "point"
      annotationCoordinate:
        type: array
        items:
          type: number
        description: lat/lon array of annotation
        example: [46.817812, 9.852413]
      coordinates:
        type: array
        items:
          type: number
        description: lat/lon array of geometry
        example: [46.817812, 9.852413]
      koinReward:
        type: integer
        description: number of koins as reward
        example: 1
      image:
        type: string
        description: the image file for the annotation either as URL or local filename for app
        example: "mission_floors"
      inputType:
        type: object
        properties:
          name:
            type: string
            description: name of the input type (number|select|text)
            example: "number"
          options:
            type: array
            items:
              type: string
            description: the selection to choose from
            example: [ "Italian", "Chinese", "Italian", "Swiss", "Thai" ]
          values:
            type: array
            items:
              type: string
            description: the corresponding values of each selection
            example: [ "type1", "type2", "type3", "type4", "type5" ]
          constraints:
            type: object
            properties:
              description:
                type: string
                description: the localized message that is shown to the user if validation fails
                example: "Number must be between 1 and 100"
              re:
                type: string
                description: the regular expression in place


  missionSolution:
    type: object
    properties:
      solution:
        $ref: '#/definitions/Solution'

  Solution:
    type: object
    properties:
      value:
        type: string
        description: id
      koins:
        type: integer
        description: number of koins earned
      solved:
        type: boolean
        description: whether the mission was solved or not
      userId:
        type: integer
        description: unique user id
      osm_id:
        type: integer
        description: the unique osm id
      type:
        type: string
        description: type of error

  Achievement:
    type: object
    properties:
      achievementId:
        type: integer
        description: achievement id
      achievementTitle:
        type: string
        description: achievement title
      achievementDescription:
        type: string
        description: achievement description
      achievementImageURI:
        type: string
        description: uri for the badge icon
      achieved:
        type: boolean
        description: whether or not the achievement has been achieved
      achievementDate:
        type: string
        format: date-time
        description: the date on which the achievement has been achieved

  Highscore:
    type: object
    properties:
      id:
        type: integer
        description: id
      rank:
        type: integer
        description: the rank for this user
      user_id:
        type: string
        description: the id of this user
      username:
        type: string
        description: the username
      mission_count:
        type: integer
        description: how many missions this user has solved
      koin_count:
        type: integer
        description: how many koins this user has earned
